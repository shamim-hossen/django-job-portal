# Generated by Django 5.0.6 on 2024-06-26 11:48

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('mobile_number', models.PositiveIntegerField(null=True, unique=True)),
                ('profile_picture', models.ImageField(null=True, upload_to='static/media')),
                ('user_type', models.CharField(choices=[('candidate', 'Candidate'), ('employer', 'Employer'), ('authority', 'Authority')], max_length=50, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcademicQualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institute_name', models.CharField(max_length=255, null=True)),
                ('degree_name', models.CharField(max_length=100, null=True)),
                ('grade', models.CharField(max_length=50, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('description', models.TextField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=10, null=True)),
                ('date_of_birth', models.DateField(null=True)),
                ('job_type', models.CharField(blank=True, choices=[('freelance', 'Freelance'), ('full_time', 'Full Time'), ('internship', 'Internship'), ('part_time', 'Part Time'), ('spot_time', 'Spot Time')], max_length=20, null=True)),
                ('salary_type', models.CharField(blank=True, choices=[('hourly', 'Hourly'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('project_base', 'Project Base')], max_length=20, null=True)),
                ('currency_type', models.CharField(blank=True, choices=[('dollar', 'Dollar'), ('taka', 'Taka')], max_length=10, null=True)),
                ('current_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CompanyProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, null=True)),
                ('website', models.URLField(null=True)),
                ('headline', models.CharField(max_length=255, null=True)),
                ('founded_date', models.DateField(null=True)),
                ('category', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(null=True)),
                ('employer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ContactInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.CharField(max_length=20, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('full_address', models.TextField(null=True)),
                ('video', models.URLField(blank=True, null=True)),
                ('company_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mainapp.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='JobInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=255, null=True)),
                ('industry', models.CharField(max_length=100, null=True)),
                ('department', models.CharField(max_length=100, null=True)),
                ('position', models.CharField(max_length=100, null=True)),
                ('application_deadline', models.DateField(null=True)),
                ('specific_gender', models.CharField(blank=True, choices=[('any', 'Any'), ('Male', 'Male'), ('Female', 'Female')], max_length=10, null=True)),
                ('job_description', models.TextField(null=True)),
                ('job_requirements', models.TextField(null=True)),
                ('academic_qualifications', models.CharField(choices=[('PSC', 'Primary School Certificate (PSC)'), ('JSC', 'Junior School Certificate (JSC)'), ('SSC', 'Secondary School Certificate (SSC)'), ('HSC', 'Higher Secondary Certificate (HSC)'), ('Honours', 'Honours'), ('Masters', "Master's"), ('Phd', 'PhD')], max_length=20, null=True)),
                ('preferred_qualification', models.CharField(blank=True, choices=[('PSC', 'Primary School Certificate (PSC)'), ('JSC', 'Junior School Certificate (JSC)'), ('SSC', 'Secondary School Certificate (SSC)'), ('HSC', 'Higher Secondary Certificate (HSC)'), ('Honours', 'Honours'), ('Masters', "Master's"), ('Phd', 'PhD')], max_length=20, null=True)),
                ('job_type', models.CharField(choices=[('freelance', 'Freelance'), ('full_time', 'Full Time'), ('internship', 'Internship'), ('part_time', 'Part Time'), ('spot_time', 'Spot Time')], max_length=20, null=True)),
                ('salary_type', models.CharField(choices=[('hourly', 'Hourly'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly'), ('project_base', 'Project Base')], max_length=20, null=True)),
                ('salary', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('currency', models.CharField(choices=[('dollar', 'Dollar'), ('taka', 'Taka')], max_length=10, null=True)),
                ('experience', models.IntegerField(null=True)),
                ('job_skills', models.TextField(null=True)),
                ('number_of_vacancies', models.IntegerField(null=True)),
                ('posted_date', models.DateField(auto_now_add=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='job_images/')),
                ('employer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='mainapp.companyprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Applicant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('resume', models.FileField(upload_to='resumes/')),
                ('cover_letter', models.TextField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewed', 'Reviewed'), ('accepted', 'Accepted'), ('rejected', 'Rejected')], max_length=50)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.jobinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('years_of_experience', models.IntegerField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SocialNetwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('twitter', 'Twitter')], max_length=20, null=True)),
                ('url', models.URLField(null=True)),
                ('contact_information', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.contactinformation')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_name', models.CharField(max_length=255, null=True)),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('currently_working_here', models.BooleanField(default=False)),
                ('job_description', models.TextField(null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
